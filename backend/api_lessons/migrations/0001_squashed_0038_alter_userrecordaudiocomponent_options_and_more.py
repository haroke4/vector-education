# Generated by Django 5.0.2 on 2024-05-23 04:20

import backend.global_function
import django.db.models.deletion
import protected_media.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('api_lessons', '0001_initial'), ('api_lessons', '0002_initial'), ('api_lessons', '0003_lessonbatch_question_questionanswer_and_more'), ('api_lessons', '0004_alter_lesson_options_alter_lessonbatch_options_and_more'), ('api_lessons', '0005_lesson_is_available_on_free_alter_lesson_description_and_more'), ('api_lessons', '0006_userquestionmodel'), ('api_lessons', '0007_alter_lesson_lesson_batch'), ('api_lessons', '0008_alter_lessonbatch_title'), ('api_lessons', '0009_alter_question_lesson_alter_questionanswer_question'), ('api_lessons', '0010_alter_question_options'), ('api_lessons', '0011_conspectuscomponent_videocomponent_and_more'), ('api_lessons', '0012_remove_questioncomponent_lesson'), ('api_lessons', '0013_userlessonmodel'), ('api_lessons', '0014_alter_lessoncomponent_type'), ('api_lessons', '0015_alter_lessoncomponent_type'), ('api_lessons', '0016_remove_userlessonmodel_progress_and_more'), ('api_lessons', '0017_rename_is_lesson_completed_userlessonmodel_completed'), ('api_lessons', '0018_alter_userlessonmodel_user'), ('api_lessons', '0019_alter_lesson_options_lesson_order'), ('api_lessons', '0020_filltextcomponent_matchingcomponent_and_more'), ('api_lessons', '0021_matchingcomponentelement_and_more'), ('api_lessons', '0022_rename_topic_lesson_title'), ('api_lessons', '0023_bluecardcomponent_putinordercomponent_and_more'), ('api_lessons', '0024_alter_audiocomponent_order_and_more'), ('api_lessons', '0025_alter_audiocomponent_audio'), ('api_lessons', '0026_filltextline_answer_filltextline_put_words_and_more'), ('api_lessons', '0027_remove_audiocomponent_lesson_page_and_more'), ('api_lessons', '0028_delete_audiocomponent_delete_bluecardcomponent_and_more'), ('api_lessons', '0029_filltextcomponent_matchingcomponentelement_and_more'), ('api_lessons', '0030_alter_audiocomponent_lesson_page_and_more'), ('api_lessons', '0031_alter_audiocomponent_lesson_page_and_more'), ('api_lessons', '0032_remove_imagecomponent_lesson_page_and_more'), ('api_lessons', '0033_lessonpageelement'), ('api_lessons', '0034_alter_lessonpageelement_audio_component_and_more'), ('api_lessons', '0035_matchingcomponentelementcouple_component'), ('api_lessons', '0036_alter_matchingcomponentelementcouple_first_element_and_more'), ('api_lessons', '0037_rename_bluecard_component_lessonpageelement_blue_card_component_and_more'), ('api_lessons', '0038_alter_userrecordaudiocomponent_options_and_more')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LessonBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('listening', 'Listening'), ('speaking', 'Speaking'), ('reading', 'Reading'), ('writing', 'Writing'), ('addition', 'Additional')], max_length=255, verbose_name='Название коллекции уроков')),
            ],
            options={
                'verbose_name': 'Коллекция уроков',
                'verbose_name_plural': 'Коллекции уроков',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Тема')),
                ('lesson_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='api_lessons.lessonbatch', verbose_name='Коллекция уроков')),
                ('is_available_on_free', models.BooleanField(default=False, verbose_name='Доступен на бесплатном тарифе')),
                ('order', models.IntegerField(default=1, verbose_name='Порядок урока в коллекции')),
            ],
            options={
                'verbose_name': 'Урок',
                'verbose_name_plural': 'Уроки',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='UserLessonModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_lessons.lesson', verbose_name='Урок')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('completed', models.BooleanField(default=False, verbose_name='Урок завершен')),
            ],
        ),
        migrations.CreateModel(
            name='FillTextComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Заполните текст', max_length=200, verbose_name='Заголовок')),
            ],
            options={
                'verbose_name': 'Заполните текст компонент',
                'verbose_name_plural': 'Заполните текст компоненты',
            },
        ),
        migrations.CreateModel(
            name='MatchingComponentElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200, verbose_name='Текст элемента')),
                ('image', protected_media.models.ProtectedImageField(blank=True, null=True, storage=protected_media.models.ProtectedFileSystemStorage(), upload_to='matching_elements/', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Элемент соединения',
                'verbose_name_plural': 'Элементы соединения',
            },
        ),
        migrations.CreateModel(
            name='FillTextLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_before', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Текст')),
                ('put_words', models.BooleanField(default=False, verbose_name='Подставить слова')),
                ('answer', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Ответ (оставьте пустым если только текст )')),
                ('text_after', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Текст после')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='api_lessons.filltextcomponent', verbose_name='Компонент')),
            ],
            options={
                'verbose_name': 'Строка компонента заполните текст',
                'verbose_name_plural': 'Строки компонента заполните текст',
            },
        ),
        migrations.CreateModel(
            name='LessonPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(verbose_name='Порядок страницы в уроке')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='api_lessons.lesson', verbose_name='Урок')),
            ],
            options={
                'verbose_name': 'Страница урока',
                'verbose_name_plural': 'Страницы урока',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='PutInOrderComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Поставьте в правильном порядке', max_length=200, verbose_name='Заголовок')),
            ],
            options={
                'verbose_name': 'Поставьте в правильном порядке компонент',
                'verbose_name_plural': 'Поставьте в правильном порядке компоненты',
            },
        ),
        migrations.CreateModel(
            name='PutInOrderComponentElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200, verbose_name='Текст элемента')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elements', to='api_lessons.putinordercomponent', verbose_name='Компонент')),
            ],
            options={
                'verbose_name': 'Элемент компонента поставьте в правильном порядке',
                'verbose_name_plural': 'Элементы компонента поставьте в правильном порядке',
            },
        ),
        migrations.CreateModel(
            name='QuestionComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=2000, verbose_name='Текст вопроса')),
            ],
            options={
                'verbose_name': 'Вопрос компонент',
                'verbose_name_plural': 'Вопросы компоненты',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='QuestionAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=2000, verbose_name='Ответ')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Правильный ответ')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='api_lessons.questioncomponent', verbose_name='Вопрос')),
            ],
            options={
                'verbose_name': 'Ответ на вопрос',
                'verbose_name_plural': 'Ответы на вопросы',
            },
        ),
        migrations.CreateModel(
            name='RecordAudioComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Запись аудио компонент',
                'verbose_name_plural': 'Запись аудио компоненты',
            },
        ),
        migrations.CreateModel(
            name='UserRecordAudioComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='audio/', verbose_name='Аудио файл')),
                ('teacher_comment', models.TextField(blank=True, null=True, verbose_name='Комментарий учителя')),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_records', to='api_lessons.recordaudiocomponent', verbose_name='Компонент')),
            ],
            options={
                'verbose_name': 'Записи пользователей аудио компонент',
                'verbose_name_plural': 'Записи пользователей аудио компоненты',
            },
        ),
        migrations.CreateModel(
            name='ImageComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, default='Изображение', max_length=200, null=True, verbose_name='Описание')),
                ('image', protected_media.models.ProtectedImageField(storage=protected_media.models.ProtectedFileSystemStorage(), upload_to=backend.global_function.PathAndRename('images/'), verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Изображение компонент',
                'verbose_name_plural': 'Изображения компоненты',
            },
        ),
        migrations.CreateModel(
            name='BlueCardComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(default='Текст', verbose_name='Текст')),
            ],
            options={
                'verbose_name': 'Blue Card компонент',
                'verbose_name_plural': 'Blue Card компоненты',
            },
        ),
        migrations.CreateModel(
            name='AudioComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Аудио', max_length=200, verbose_name='Заголовок')),
                ('audio', protected_media.models.ProtectedFileField(storage=protected_media.models.ProtectedFileSystemStorage(), upload_to=backend.global_function.PathAndRename('audio/'), verbose_name='Аудио файл')),
            ],
            options={
                'verbose_name': 'Аудио компонент',
                'verbose_name_plural': 'Аудио компоненты',
            },
        ),
        migrations.CreateModel(
            name='MatchingComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Соедините элементы', max_length=200, verbose_name='Заголовок')),
            ],
            options={
                'verbose_name': 'Соедините элементы компонент',
                'verbose_name_plural': 'Соедините элементы компоненты',
            },
        ),
        migrations.CreateModel(
            name='TextComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('text', models.TextField(verbose_name='Текст')),
            ],
            options={
                'verbose_name': 'Текст компонент',
                'verbose_name_plural': 'Текст компоненты',
            },
        ),
        migrations.CreateModel(
            name='VideoComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=2000, verbose_name='Описание')),
                ('video_url', models.URLField(verbose_name='Ссылка на видео')),
            ],
            options={
                'verbose_name': 'Видео компонент',
                'verbose_name_plural': 'Видео компоненты',
            },
        ),
        migrations.CreateModel(
            name='MatchingComponentElementCouple',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_element', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='first_element', to='api_lessons.matchingcomponentelement', verbose_name='Первый элемент')),
                ('second_element', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='second_element', to='api_lessons.matchingcomponentelement', verbose_name='Второй элемент')),
                ('component', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='element_couples', to='api_lessons.matchingcomponent', verbose_name='Компонент')),
            ],
            options={
                'verbose_name': 'Пара элементов соединения',
                'verbose_name_plural': 'Пары элементов соединения',
            },
        ),
        migrations.CreateModel(
            name='LessonPageElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(verbose_name='Порядок элемента на странице')),
                ('audio_component', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='page_element', to='api_lessons.audiocomponent')),
                ('blue_card_component', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='page_element', to='api_lessons.bluecardcomponent')),
                ('fill_text_component', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='page_element', to='api_lessons.filltextcomponent')),
                ('image_component', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='page_element', to='api_lessons.imagecomponent')),
                ('matching_component', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='page_element', to='api_lessons.matchingcomponent')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elements', to='api_lessons.lessonpage', verbose_name='Страница')),
                ('put_in_order_component', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='page_element', to='api_lessons.putinordercomponent')),
                ('question_component', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='page_element', to='api_lessons.questioncomponent')),
                ('record_audio_component', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='page_element', to='api_lessons.recordaudiocomponent')),
                ('text_component', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='page_element', to='api_lessons.textcomponent')),
                ('video_component', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='page_element', to='api_lessons.videocomponent')),
            ],
            options={
                'verbose_name': 'Элемент страницы урока',
                'verbose_name_plural': 'Элементы страницы урока',
                'ordering': ['order'],
            },
        ),
    ]
