services:
  db:
    image: postgres:15
    networks:
      - back
    volumes:
      - database:/var/lib/postgresql/data/
    env_file:
      - .env

  redis:
    image: redis
    networks:
      - back
    env_file:
      - .env
    ports:
      - "6379:6379"


  backend:
    build: ./backend
    command: daphne -b 0.0.0.0 -p 8000 backend.asgi:application
    networks:
      - back
    volumes:
      - ./backend/:/usr/src/app/
      - static_volume:/home/app/staticfiles
      - media_volume:/home/app/protected
    ports:
      - "8000:8000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  django-qcluster:
    build: ./backend
    command: python manage.py qcluster
    networks:
      - back
    volumes:
      - ./backend/:/usr/src/app/
    env_file:
      - .env
    environment:
      - RUN_MIGRATIONS = 0
    depends_on:
      - db
      - backend


  nginx:
    build: ./nginx
    networks:
      - front
      - back
    volumes:
      - static_volume:/home/app/staticfiles
      - media_volume:/home/app/protected
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro

    ports:
      - '80:80'
      - '443:443'
    env_file:
      - .env
    depends_on:
      - backend
    restart: always

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx


volumes:
  database:
  static_volume:
  media_volume:
  ssl_volume:

networks:
  front:
  back:
